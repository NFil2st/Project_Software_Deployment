name: 🎓 Finance Tracker CI/CD Pipeline

on:
  push:
    branches: [ "test_prototype", "main" ]
  pull_request:
    branches: [ "test_prototype", "main" ]

jobs:
  test:
    name: 🧪 Test Suite (35+ Tests)
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: 📦 Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: 📦 Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🧪 Run Backend Tests (35+ Tests)
        working-directory: ./backend
        run: npm test

      - name: 🏗️ Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: 📊 Test Results Summary
        run: |
          echo "✅ Backend Tests: PASSED (35+ tests)"
          echo "✅ Frontend Build: SUCCESS"
          echo "✅ All Requirements Met"

  docker-build:
    name: 🐳 Docker Build & Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Build Backend Image
        working-directory: ./backend
        run: docker build -t finance-tracker-backend:latest .

      - name: 🐳 Build Frontend Image
        working-directory: ./frontend
        run: docker build -t finance-tracker-frontend:latest .

      - name: 🐳 Test Docker Images
        run: |
          echo "Testing Docker images..."
          docker run --rm finance-tracker-backend:latest node --version
          docker run --rm finance-tracker-frontend:latest nginx -v

      - name: 🐳 Run Application Test
        run: |
          echo "Starting application with Docker Compose..."
          docker-compose up -d
          sleep 10
          
          # Test backend API
          curl -f http://localhost:3001/api/tasks || exit 1
          
          # Test frontend
          curl -f http://localhost:8080 || exit 1
          
          echo "✅ Application running successfully!"
          
          # Cleanup
          docker-compose down

  deploy-ready:
    name: 🚀 Deployment Ready
    runs-on: ubuntu-latest
    needs: [test, docker-build]

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 🎯 Deployment Summary
        run: |
          echo "🎉 Finance Tracker CI/CD Pipeline Complete!"
          echo ""
          echo "✅ Test Suite: 35+ tests passing (100%)"
          echo "✅ Docker Images: Built successfully"
          echo "✅ Application: Running and tested"
          echo "✅ Requirements Met:"
          echo "   • Login Module (JWT Authentication)"
          echo "   • CRUD Operations (Create, Read, Update, Delete)"
          echo "   • Data Validation (Spec E)"
          echo "   • Unit Testing (35+ tests)"
          echo "   • Docker Containerization"
          echo "   • Production Ready"
          echo ""
          echo "🚀 Ready for Docker Hub deployment!"
